{
  "name": "node-random",
  "version": "0.0.3",
  "description": "random.org client",
  "keywords": [
    "random",
    "random.org"
  ],
  "main": "random.js",
  "engines": {
    "node": "*"
  },
  "license": {
    "type": "MIT",
    "url": "https://github.com/Dlom/node-random/blob/master/LICENSE"
  },
  "dependencies": {
    "request": "2.12.x"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/Dlom/node-random.git"
  },
  "author": {
    "name": "Mark Old"
  },
  "readme": "# node-random -- A random.org api wrapper\n\n## Install\n\n`npm install node-random`\n\n## Usage\n\nThe `options` argument is always optional.\n\n`numbers` is an alias for `integers`\n\n`sequence` is an alias for `sequences`\n\n```javascript\nvar random = require(\"node-random\");\n\nrandom.integers(options, function(error, data) {\n    // data is an array of numbers\n});\n\nrandom.sequences(options, function(error, quota) {\n    // data is an array of numbers\n});\n\nrandom.strings(options, function(error, data) {\n    // data is an array of strings\n});\n\nrandom.quota(options, function(error, data) {\n    // data is an integer\n});\n```\n\n## Options Defaults\n\n### `random.integers`, `random.numbers`\n\nSee [here](http://www.random.org/clients/http/#integers) for the meanings (Option names are slightly different);\n\n* `number` - `1`\n* `minimum` - `0`\n* `maximum` - `10000`\n* `columns` - `1` (When this is more than 1, `data` is a 2D array -- rows by columns)\n* `base` - `10`\n* `random` - `\"new\"`\n\n### `random.sequences`, `random.sequence`\n\nSee [here](http://www.random.org/clients/http/#sequences) for the meanings (Option names are slightly different);\n\n* `minimum` - `0`\n* `maximum` - `10000`\n* `columns` - `1` (When this is more than 1, `data` is a 2D array -- rows by columns)\n* `base` - `10`\n* `random` - `\"new\"`\n\n### `random.numbers`\n\nSee [here](http://www.random.org/clients/http/#strings) for the meanings (Option names are slightly different);\n\n* `number` - `1`\n* `length` - `10`\n* `digits` - `true`\n* `upper` - `true`\n* `lower` - `true`\n* `unique` - `false`\n* `random` - `\"new\"`\n\n### `random.quota`\n\nSee [here](http://www.random.org/clients/http/#quota) for the meanings (Option names are slightly different);\n\n* `ip` - `\"\"`\n\n## Examples\n\n```javascript\nvar random = require(\"node-random\");\n\n// Get 2 random numbers between 1 and 6\nconsole.log(\"Rolling 2 dice\");\nrandom.numbers({\n    \"number\": 2,\n    \"minimum\": 1,\n    \"maximum\": 6\n}, function(error, data) {\n    if (error) throw error;\n    data.forEach(function(d) {\n        console.log(d);\n    });\n});\n\n// Get a random 3x3 grid and print the middle vertical row\nrandom.sequences({\n    \"minimum\": 1,\n    \"maximum\": 9,\n    \"columns\": 3\n}, function(error, data) {\n    if (error) throw error;\n    console.log(data);\n    console.log(data[0][1]);\n    console.log(data[1][1]);\n    console.log(data[2][1]);\n});\n\n// Get 20 different lowercase characters\nrandom.strings({\n    \"length\": 1,\n    \"number\": 20,\n    \"upper\": false,\n    \"digits\": false\n}, function(error, data) {\n   if (error) throw error;\n   console.log(data.join(\" and \"));\n});\n\n// Check your quota\nrandom.quota(function(error, quota) {\n    console.log(\"Remaining bytes: \" + quota)\n});\n```\n\n## Aliases\n\n* `random.numbers` = `random.integers`\n* `random.sequence` = `random.sequences`\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/Dlom/node-random/issues"
  },
  "_id": "node-random@0.0.3",
  "dist": {
    "shasum": "4b1966d9a1293643c0a73094baac32b93190f26f"
  },
  "_from": "node-random@",
  "_resolved": "https://registry.npmjs.org/node-random/-/node-random-0.0.3.tgz"
}
